<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Cpp on B. Hudyma Logs</title>
    <link>https://BaptisteHudyma.github.io/tags/cpp/</link>
    <description>Recent content in Cpp on B. Hudyma Logs</description>
    <generator>Hugo -- gohugo.io</generator>
    <managingEditor>bapt.hudyma95650@gmail.com (Baptiste Hudyma)</managingEditor>
    <webMaster>bapt.hudyma95650@gmail.com (Baptiste Hudyma)</webMaster>
    <lastBuildDate>Tue, 04 May 2021 00:00:00 +0000</lastBuildDate><atom:link href="https://BaptisteHudyma.github.io/tags/cpp/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Exploration de possibilités - Partie 2</title>
      <link>https://BaptisteHudyma.github.io/post/monte_carlo_tree_p2/</link>
      <pubDate>Tue, 04 May 2021 00:00:00 +0000</pubDate>
      <author>bapt.hudyma95650@gmail.com (Baptiste Hudyma)</author>
      <guid>https://BaptisteHudyma.github.io/post/monte_carlo_tree_p2/</guid>
      <description>Partie 2: Améliorations et encore plus de blabla !
Nous en étions resté a la construction d&amp;rsquo;une structure d&amp;rsquo;arbre de recherche basique utilisant une recherche de possibilité basée sur un équilibre l&amp;rsquo;exploration, de score et de chance (MCTS: Monte Carlo Tree Search). Notre petit programme fonctionne tout a fait tel quel, mais en le programmant la première fois j&amp;rsquo;ai remarqué des points d&amp;rsquo;amélioration. Dans cette deuxième partie, je vais montrer les améliorations que j&amp;rsquo;ai trouvé pour la méthode de base.</description>
    </item>
    
    <item>
      <title>Exploration de possibilités - Partie 1</title>
      <link>https://BaptisteHudyma.github.io/post/monte_carlo_tree_p1/</link>
      <pubDate>Thu, 22 Apr 2021 00:00:00 +0000</pubDate>
      <author>bapt.hudyma95650@gmail.com (Baptiste Hudyma)</author>
      <guid>https://BaptisteHudyma.github.io/post/monte_carlo_tree_p1/</guid>
      <description>&lt;p&gt;&lt;em&gt;&lt;strong&gt;Partie 1: Blabla et implémentation&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Je suis nul aux échecs, aux dames, me fait rouler dessus au Puissance 4, bref les jeux de société ne sont pas mon fort. Par contre je me débrouille pas mal en programmation.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Segmentation de depth map</title>
      <link>https://BaptisteHudyma.github.io/post/depth_map_segmentation/</link>
      <pubDate>Mon, 15 Feb 2021 00:00:00 +0000</pubDate>
      <author>bapt.hudyma95650@gmail.com (Baptiste Hudyma)</author>
      <guid>https://BaptisteHudyma.github.io/post/depth_map_segmentation/</guid>
      <description>&lt;p&gt;Dans ce post, j&amp;rsquo;implémente un système de segmentation de depth map en temps réel, basé sur l&amp;rsquo;analyse d&amp;rsquo;une normal map.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Monocular Depth Map</title>
      <link>https://BaptisteHudyma.github.io/post/monocular_depth_map/</link>
      <pubDate>Sun, 24 Jan 2021 00:00:00 +0000</pubDate>
      <author>bapt.hudyma95650@gmail.com (Baptiste Hudyma)</author>
      <guid>https://BaptisteHudyma.github.io/post/monocular_depth_map/</guid>
      <description>&lt;p&gt;Utiliser un flux vidéo issu d&amp;rsquo;une seule caméra pour estimer la profondeur des objets dans l&amp;rsquo;image.
Un petit plongeon dans le monde de la géométrie épipolaire et de l&amp;rsquo;analyse des points d&amp;rsquo;intérêts.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>De CAPE et d&#39;Opés</title>
      <link>https://BaptisteHudyma.github.io/post/de_cape_et_d_opes/</link>
      <pubDate>Mon, 11 Jan 2021 00:00:00 +0000</pubDate>
      <author>bapt.hudyma95650@gmail.com (Baptiste Hudyma)</author>
      <guid>https://BaptisteHudyma.github.io/post/de_cape_et_d_opes/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://arxiv.org/abs/1803.02380&#34;&gt;CAPE (Cylinder And Plane Extraction)&lt;/a&gt; est une méthode extrêmement efficace d&amp;rsquo;extraction de plans et cylindres dans des images RGB-D, basée sur une méthode AHC.
Malgré l&amp;rsquo;efficacité de cette méthode, l&amp;rsquo;implémentation C++ du papier présente de nombreux défauts.&lt;/p&gt;
&lt;p&gt;Dans ce post, je vais expliquer comment j&amp;rsquo;ai réparé la plupart de ces problèmes.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>PPC SLAM</title>
      <link>https://BaptisteHudyma.github.io/post/ppc_slam/</link>
      <pubDate>Mon, 28 Dec 2020 00:00:00 +0000</pubDate>
      <author>bapt.hudyma95650@gmail.com (Baptiste Hudyma)</author>
      <guid>https://BaptisteHudyma.github.io/post/ppc_slam/</guid>
      <description>&lt;p&gt;Localiser un robot mobile dans un environnement virtuel grâce a la programmation par contraintes.&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>
